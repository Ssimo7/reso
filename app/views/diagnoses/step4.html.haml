- meta title: t('.title')

= render partial: 'steps', locals: { current_page_step: 4, diagnosis_step: @diagnosis.step }

#step4-app
  - if @diagnosed_needs.empty?
    %p= t('.no_diagnosed_needs')
  - else
    %p= t('.explanation')

    = form_for :selected_assistances_experts, url: notify_experts_diagnosis_path,
               method: :post, data: { confirm: t('.form_confirmation_message') } do |f|
      - there_are_assistances_experts = false
      - territory_users = TerritoryUser.of_diagnosis_location @diagnosis
      - @diagnosed_needs.each do |diagnosed_need|
        %table.ui.compact.small.table.celled
          %thead
            %tr
              %th{ colspan: 3 }= diagnosed_need.question
          %tbody
            - assistances_experts = diagnosed_need.question.assistances.flat_map(&:assistances_experts)
            - if assistances_experts.blank?
              - if territory_users.empty?
                %tr
                  %td= t('.no_assistance')
              - else
                - territory_users.each do |territory_user|
                  %tr
                    - checkbox_id = "territory-user-#{territory_user.id}".to_sym
                    %td.checkbox-width
                      .ui.fitted.checkbox
                        = f.check_box checkbox_id, checked: true
                        %label
                    %td.expert-width
                      = f.label checkbox_id, class: 'clickable' do
                        = territory_user.user.full_name
                        %br
                        = territory_user.user.institution
                    %td
                      = f.label checkbox_id, class: 'clickable' do
                        .tiny.text.bold
                          = t('.expert_scope_of_work')
                        .small.text
                          = "Gestionnaire du territoire #{territory_user.territory.name}."
            - else
              - there_are_assistances_experts ||= true
              - assistances_experts.each do |assistance_expert|
                %tr
                  - checkbox_id = "assistance-expert-#{assistance_expert.id}".to_sym
                  %td.checkbox-width
                    .ui.fitted.checkbox
                      = f.check_box checkbox_id, checked: true
                      %label
                  %td.expert-width
                    = f.label checkbox_id, class: 'clickable' do
                      = assistance_expert.expert.full_name
                      %br
                      = assistance_expert.expert.institution
                  %td
                    = f.label checkbox_id, class: 'clickable' do
                      .tiny.text.bold
                        = t('.expert_scope_of_work')
                      .small.text
                        = assistance_expert.assistance.title

      - notify_button_enabled = @diagnosis.visit.visitee.present? && there_are_assistances_experts

      - if notify_button_enabled
        .ui.info.message
          = t('.before_sending_emails_text_html')

      - unless @diagnosis.visit.visitee
        .ui.error.message
          %p= t('.add_contact_to_notify')

      .ui.two.column.stackable.grid.container
        .ui.left.aligned.column.no-left-padding.no-margin
          = link_to step_3_diagnosis_path(@diagnosis), class: 'ui left labeled icon button no-margin' do
            = t('previous_step')
            %i.arrow.left.icon

        .ui.right.aligned.column.no-right-padding.no-margin
          %button.ui.teal.button.no-margin#next-step-button{ class: ('disabled' unless notify_button_enabled) }
            = t('.notify_selected_experts')

      .clear
