<template>
    <div class="ui dimmer modals page inverted" v-bind:class="{ active: show }" v-on:click="dimmerClicked">
        <div class="ui modal large visible scrolling" v-bind:class="{ active: show }">
            <div class="header">
                <%= I18n.t('diagnoses.show.add_contact_modal.header') %>
            </div>
            <div class="content">
                <div class="description">
                    <div class="ui form" v-bind:class="{ error: showErrorMessage }" >
                        <div class="ui error message">
                            <div class="header">
                                <%= I18n.t('diagnoses.show.add_contact_modal.error_header') %>
                            </div>
                            <p>
                                <%= I18n.t('diagnoses.show.add_contact_modal.error_message') %>
                            </p>
                        </div>
                        <div class="required field" v-bind:class="{ error: !nameCompleted && errorShowing }">
                            <label><%= I18n.t('diagnoses.show.add_contact_modal.full_name') %></label>
                            <input v-model="name" type="text">
                        </div>
                        <div class="required field" v-bind:class="{ error: !jobCompleted && errorShowing }">
                            <label><%= I18n.t('diagnoses.show.add_contact_modal.role') %></label>
                            <input v-model="job" type="text" required="required">
                        </div>
                        <h3 class="ui header">
                            <%= I18n.t('diagnoses.show.add_contact_modal.contact_detail') %>
                            <div class="sub header "><%= I18n.t('diagnoses.show.add_contact_modal.add_one_contact_mode_below') %></div>
                        </h3>
                        <div class="field" v-bind:class="{ error: !contactCompleted && errorShowing }">
                            <label><%= I18n.t('diagnoses.show.add_contact_modal.email_address') %></label>
                            <input v-model="email" type="text">
                        </div>
                        <div class="field"  v-bind:class="{ error: !contactCompleted && errorShowing }">
                            <label><%= I18n.t('diagnoses.show.add_contact_modal.phone_number') %></label>
                            <input v-model="phoneNumber" type="text">
                        </div>
                    </div>
                </div>
            </div>
            <div class="actions">
                <div class="ui right labeled icon button" v-on:click="closeButtonClicked"
                v-bind:class="{ disabled: isSaving}">
                    <%= I18n.t('cancel') %>
                    <i class="remove icon"></i>
                </div>
                <button class="ui positive right labeled icon button" v-on:click="saveButtonClicked"
                 v-bind:class="{ disabled: isSaving, loading: isSaving, button: isSaving}">
                    <%= I18n.t('save') %>
                    <i class="checkmark icon"></i>
                </button>
            </div>
        </div>
    </div>
</template>

<script>
import RequestService from './requestService'

import { mapMutations, mapActions } from 'vuex'
import * as types from './store/mutationTypes'

export default {
  name: 'add-contact-modal',
  props: [
    'show',
    'visitId'
  ],
  data: function () {
    return {
      name: '',
      job: '',
      email: '',
      phoneNumber: '',
      errorShowing: false,
      showErrorMessage: false,
      isSaving: false
    }
  },
  watch: {
    show: function (newShow) {
      if (newShow) {
        document.body.style.overflow = 'hidden'
      } else {
        document.body.style.overflow = ''
      }
    }
  },
  computed: {
    dataCompleted: function () {
      return this.nameCompleted && this.jobCompleted && this.contactCompleted
    },
    nameCompleted: function () {
      return this.name != ''
    },
    jobCompleted: function () {
      return this.job != ''
    },
    contactCompleted: function () {
      return (this.email != '' || this.phoneNumber != '')
    }
  },
  mounted: function () {
    this.setVisitId({ visitId: this.visitId })
  },
  methods: {
    dimmerClicked: function (event) {
      if (event.target.className.includes('ui dimmer') && !this.isSaving) {
        this.$emit('update:show', false)
        this.$emit('close')
      }
    },
    closeButtonClicked: function () {
      this.clearForm()
      this.$emit('update:show', false)
      this.$emit('close')
    },
    saveButtonClicked: function () {
      this.showErrorMessage = false

      if (this.dataCompleted) {
        const contactData = {
          full_name: this.name,
          email: this.email,
          phone_number: this.phoneNumber,
          role: this.job
        }

        this.isLoading = true
        const that = this

        this.createContact(contactData)
          .then(() => {
            that.isLoading = false
            that.clearForm()
            that.$emit('update:show', false)
            that.$emit('save')
          })
          .catch(() => {
            that.isLoading = false
            that.showErrorMessage = true
            that.errorShowing = true
          })
      } else {
        this.errorShowing = true
      }
    },
    clearForm: function () {
      this.name = ''
      this.job = ''
      this.email = ''
      this.phoneNumber = ''
      this.errorShowing = false
      this.showErrorMessage = false
    },
    ...mapMutations({
      setVisitId: types.VISIT_ID
    }),
    ...mapActions([
      'createContact'
    ])
  }
}
</script>

<style lang="sass">
    .active
        overflow: auto
    .ui.dimmer.modals.page.inverted
        padding-top: 4rem
</style>
