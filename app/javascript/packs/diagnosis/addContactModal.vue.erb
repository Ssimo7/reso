<template>
    <div class="ui dimmer modals page inverted" v-bind:class="{ active: show }" v-on:click="dimmerClicked">
        <div class="ui modal large visible scrolling" v-bind:class="{ active: show }" style="display: block !important;">
            <!--<i class="close icon"></i>-->
            <div class="header">
                Chicken
            </div>
            <div class="content">
                <div class="description">
                    <div class="ui form" v-bind:class="{ error: showErrorMessage }" >
                        <div class="ui error message">
                            <div class="header">Échec de la création</div>
                            <p>Bla bla bla erreur.</p>
                        </div>
                        <div class="required field" v-bind:class="{ error: !nameCompleted && errorShowing }">
                            <label>Prénom et Nom</label>
                            <input v-model="name" type="text">
                        </div>
                        <div class="required field" v-bind:class="{ error: !jobCompleted && errorShowing }">
                            <label>Fonction</label>
                            <input v-model="job" type="text" required="required">
                        </div>
                        <h3>Coordonnées</h3>
                        <p>Veuillez indiquer au moins un mode de contact ci-dessous.</p>
                        <div class="field" v-bind:class="{ error: !contactCompleted && errorShowing }">
                            <label>Addresse e-mail</label>
                            <input v-model="email" type="text">
                        </div>
                        <div class="field"  v-bind:class="{ error: !contactCompleted && errorShowing }">
                            <label>Numéro de téléphone</label>
                            <input v-model="phoneNumber" type="text">
                        </div>
                    </div>
                </div>
            </div>
            <div class="actions">
                <div class="ui right labeled icon button" v-on:click="closeButtonClicked"
                v-bind:class="{ disabled: isSaving}">
                    Chicken
                    <i class="remove icon"></i>
                </div>
                <button class="ui positive right labeled icon button" v-on:click="saveButtonClicked"
                 v-bind:class="{ disabled: isSaving, loading: isSaving, button: isSaving}">
                    Chicken
                    <i class="checkmark icon"></i>
                </button>
            </div>
        </div>
    </div>
</template>

<script>
    import RequestService from './requestService'

    export default {
        name: 'add-contact-modal',
        props: [
            'show',
            'visitId'
            ],
        data: function () {
            return {
                name: '',
                job: '',
                email: '',
                phoneNumber: '',
                errorShowing: false,
                showErrorMessage: false,
                isSaving: false
            }
        },
        watch: {
            show: function (newShow) {
                if(newShow) {
                    document.body.style.overflow='hidden';
                } else {
                    document.body.style.overflow='';
                }
            }
        },
        computed: {
            dataCompleted: function () {
                return this.nameCompleted && this.jobCompleted && this.contactCompleted
            },
            nameCompleted: function () {
                return this.name != '';
            },
            jobCompleted: function () {
                return this.job != '';
            },
            contactCompleted: function () {
                return (this.email != '' || this.phoneNumber != '');
            }
        },
        created: function () {
            var that = this;
            var onSuccess = function (response) {};
            var onError = function (error) {
                that.isLoading = false;
                that.showErrorMessage = true;
                that.errorShowing = true;
            };
            this.requestService = new RequestService(onSuccess, onError);
        },
        methods: {
            createContact: function () {
                this.isLoading = true;
                var that = this;
                var onSuccess = function (response) {
                      that.isLoading = false;
                      that.clearForm();
                      that.$emit('update:show', false);
                      that.$emit('save');
                };
                var config = {
                    method: 'post',
                    url: `/api/visits/${this.visitId}/contacts.json`,
                    data: {
                        contact: {
                            full_name: this.name,
                            email: this.email,
                            phone_number: this.phoneNumber,
                            role: this.job
                        }
                    }
                };
                this.requestService.send(config, onSuccess);
            },
            dimmerClicked: function (event) {
                if(event.target.className.includes("ui dimmer") && !this.isSaving) {
                    this.$emit('update:show', false);
                    this.$emit('close');
                }
            },
            closeButtonClicked: function () {
                this.clearForm();
                this.$emit('update:show', false);
                this.$emit('close');
            },
            saveButtonClicked: function () {
                this.showErrorMessage = false;
                if(this.dataCompleted) {
                    this.createContact();
                } else {
                    this.errorShowing = true;
                }
            },
            clearForm: function () {
                this.name = '';
                this.job = '';
                this.email = '';
                this.phoneNumber = '';
                this.errorShowing = false;
                this.showErrorMessage = false;
            }
        }
    }
</script>

<style lang="sass">
    .active
        overflow: auto
</style>