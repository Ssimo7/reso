<template>
    <tr v-bind:hidden="isHidden">
      <td colspan="2">
        <div class="ui form">
          <div class="field">
            <label><%= I18n.t('diagnoses.step2.diagnosed_need_content') %></label>
            <textarea rows="2" v-model="content" v-bind:disabled="isRequestInProgress"></textarea>
          </div>
        </div>
      </td>
    </tr>
</template>

<script>
import { mapState, mapGetters, mapMutations } from 'vuex'
import * as types from './store/mutationTypes'
import QuestionObjectParser from './utils/questionObjectParser'

export default {
  name: 'question-content-row',
  props: [
    'questionDataSerialized'
  ],
  data () {
    return {
      questionData: {}
    }
  },
  created: function () {
    this.questionData = QuestionObjectParser.parse(this.questionDataSerialized)
    this.setQuestionContent({ id: this.questionData.id, content: this.questionData.content })
  },
  computed: {
    ...mapState({
      isRequestInProgress: state => state.step2Store.isRequestInProgress
    }),
    ...mapGetters({
      getQuestionStateById: 'getQuestionStateById'
    }),
    isHidden: function () {
      return !this.getQuestionStateById(this.questionData.id).isSelected
    },
    content: {
      get () {
        return this.getQuestionStateById(this.questionData.id).content
      },
      set (value) {
        this.setQuestionContent({ id: this.questionData.id, content: value })
      }
    }
  },
  methods: {
    ...mapMutations({
      setQuestionContent: types.QUESTION_CONTENT
    })
  }
}
</script>

<style lang="sass">
</style>
