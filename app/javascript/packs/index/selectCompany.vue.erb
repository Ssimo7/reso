<template lang="pug">
  .ui.segment.shadow-less.dimmable(:class='{ dimmed: isRequestInProgress }')
    .ui.simple.inverted.dimmer
      .ui.text.loader
    company-input(v-on:search-siret="searchSiret",
                  v-on:error="manageError")
    error-message(:error-type='errorType')
    company-view(:company-data='companyData',
                 v-on:detail-button-click="siret => { goToDetailedCompanyInfo(siret)}")
</template>

<script>
import { mapState, mapGetters, mapMutations } from 'vuex'
import * as types from './store/indexMutationTypes'
import CompanyInput from './companyInput.vue.erb'
import ErrorMessage from './errorMessage.vue.erb'
import CompanyView from './companyView.vue.erb'

export default {
    name: 'select-company',
    components: {
        CompanyInput,
        ErrorMessage,
        CompanyView,
    },
    methods: {
        searchSiret: function(siret) {
            this.setSiret(siret)
            this.clearError()
            this.$store.dispatch('fetchCompany').catch(() => {})
        },
        manageError: function(error) {
            this.setErrorType(error)
            this.clearSiret()
        },
        clearSiret: function() {
            this.setSiret('')
        },
        clearError: function() {
            this.setErrorType('')
        },
        ...mapMutations({
            setSiret: types.SIRET,
            setErrorType: types.FORM_ERROR_TYPE
        }),
        goToDetailedCompanyInfo: function (siret) {
            const url = `/companies/${siret}`
            window.open(url, '_blank')
        },
    },
    computed: {
        ...mapState({
            errorType: state => state.indexStore.formErrorType,
            companyData: state => state.indexStore.companyData,
            isRequestInProgress: state => state.indexStore.isRequestInProgress,
        }),
    }
}
</script>
